<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>服务器编程 on Zput's blog</title><link>http://zput.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B/</link><description>Recent content in 服务器编程 on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 May 2018 16:33:00 +0000</lastBuildDate><atom:link href="http://zput.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>多路复用一点理解</title><link>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link><pubDate>Sun, 20 May 2018 16:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid><description>why, 为什么需要多路复用? 为什么要多路复用？，为什么引出多路复用。 对socket的I/O操作&amp;ndash;》read，从I/O中得到数据， wri</description></item><item><title>高性能服务器</title><link>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</link><pubDate>Wed, 28 Feb 2018 15:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</guid><description>基于通用组件编程 一些注意点 当mainLoop accept一个连接进来，怎么把这个连接放入其他的subLoop中的？ 永远不能让你业务逻辑（一般</description></item></channel></rss>