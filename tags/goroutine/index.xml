<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>goroutine on Zput's blog</title><link>http://zput.github.io/tags/goroutine/</link><description>Recent content in goroutine on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Jan 2019 09:03:00 +0000</lastBuildDate><atom:link href="http://zput.github.io/tags/goroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>内存大小端</title><link>http://zput.github.io/post/_posts/memory/</link><pubDate>Sun, 20 Jan 2019 09:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/memory/</guid><description>内存大小端 对于这两种存储方式，如果联系下我们常用 “异或” 操作，就能得到一个很好的记忆规则。总结来说就是： 低地址存储低字节即为小端存储；高地址</description></item></channel></rss>