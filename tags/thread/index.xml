<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>thread on Zput's blog</title><link>http://localhost:1313/tags/thread/</link><description>Recent content in thread on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 04 Jul 2019 19:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>谈谈线程</title><link>http://localhost:1313/post/_posts/thread/</link><pubDate>Thu, 04 Jul 2019 19:00:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/thread/</guid><description>线程模型的实现，可以分为以下几种方式： Go语言的线程模型就是一种特殊的两级线程模型。暂且叫它“MPG”模型吧。 抛弃P(Processor) 均</description></item><item><title>进程间通讯</title><link>http://localhost:1313/post/_posts/process_communication/</link><pubDate>Thu, 04 Jul 2019 19:00:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/process_communication/</guid><description>including IPC的方式通常有 管道（包括无名管道和命名管道）:PIPE 信号量: 消息队列: 信号量 共享存储: mmap() shm Socket &amp;mdash; Streams: ##including 管道中的无名管道是存放在文件描述符</description></item><item><title/><link>http://localhost:1313/post/_posts/lock/</link><pubDate>Fri, 21 Jun 2019 15:00:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/lock/</guid><description>线程死锁 线程死锁 什么是线程死锁，如何解决 产生死锁的条件有四个： 互斥条件：所谓互斥就是进程在某一时间内独占资源。 请求与保持条件：一个进程因请求</description></item></channel></rss>