<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool on Zput's blog</title><link>http://zput.github.io/tags/tool/</link><description>Recent content in Tool on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 25 Feb 2020 21:06:00 +0000</lastBuildDate><atom:link href="http://zput.github.io/tags/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>conclusion_gitlab_ci_cd</title><link>http://zput.github.io/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</link><pubDate>Tue, 25 Feb 2020 21:06:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</guid><description>大纲 gitlab pipeline gitlab&amp;rsquo;s pipeline一体两面 pipeline定义在项目的 .gitlab-ci.yml里, 由stages串联组成。（每个stages里面</description></item><item><title>the_process_structure_ci_cd_base_on_gitlab</title><link>http://zput.github.io/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</link><pubDate>Wed, 22 Jan 2020 20:09:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</guid><description>docker/docker-compose主题 https://docs.docker.com/engine/install/centos/ https://docs.docker.com/compose/install/ !!!直接使用docker的官方文档做法就行了。 gitlab主题 DevOps(CI/CD) Container(Docker) Kubernetes Service Mesh why:为什么要</description></item><item><title>telepresence一些使用方法</title><link>http://zput.github.io/post/_posts/kubernets/telepresence/</link><pubDate>Sun, 20 Oct 2019 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/kubernets/telepresence/</guid><description>1 2 3 4 5 kubectl run service-b --image=datawire/hello-world --port=8000 --expose kubectl get service service-b NAME CLUSTER-IP EXTERNAL-IP PORT(S) AGEservice-b 10.0.0.12 &amp;lt;none&amp;gt; 8000/TCP 1m https://cloud.tencent.com/developer/article/1537743 自从用上 Telepresence 后，本地调试 Kubernetes 中的微服务不再是梦！ https://cloud.tencent.com/developer/article/1537743 https://www.telepresence.io/discussion/how-it-works https://sshuttle.readthedocs.io/en/stable/usage.html#usage-notes https://github.com/datawire/sshuttle k8s自定义controller三部曲</description></item><item><title>迁移本地环境需要用到的</title><link>http://zput.github.io/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</guid><description>首先解决网络问题: download ShadowsocksR for MAC: 这个软件，添加配置了以后，先不要连，需要先更新订阅然后再去连接 vpn/httpproxy ➜ code cat ~/.bashrc 1 2 3 4 5 6 7 #export http_proxy=http://127.0.0.1:1087 #export https_proxy=http://127.0.0.1:1087 export http_proxy=&amp;#34;&amp;#34; export https_proxy=&amp;#34;&amp;#34; #export HTTP_PROXY=&amp;#34;&amp;#34; #export HTTPS_PROXY=&amp;#34;&amp;#34; 软件</description></item><item><title>建立个人仓库</title><link>http://zput.github.io/post/_posts/tool/hexo_and_maupassant/</link><pubDate>Wed, 24 May 2017 12:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/hexo_and_maupassant/</guid><description>hexo仓库 build.sh 1 2 3 4 5 6 7 #!/bin/bash npm install git submodule init git submodule update # https://www.haomwei.com/technology/maupassant-hexo.html npm install hexo-renderer-pug --save npm install hexo-renderer-sass --save #the great word 其中hexo仓库可以加上你需要的主题仓库 git submodule add https://github.com/tufu9441/maupassant-hexo.git themes/maupassant source仓库 makefile</description></item></channel></rss>