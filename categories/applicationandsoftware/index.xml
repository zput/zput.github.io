<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>applicationAndSoftware on Zput's blog</title><link>http://zput.github.io/categories/applicationandsoftware/</link><description>Recent content in applicationAndSoftware on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 09 Nov 2023 19:00:00 +0000</lastBuildDate><atom:link href="http://zput.github.io/categories/applicationandsoftware/index.xml" rel="self" type="application/rss+xml"/><item><title>线性回归和逻辑回归</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link><pubDate>Thu, 09 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid><description>线性回归 线性回归(Linear regression)是利用回归方程（函数）对一个或多个自变量（特征值）和因变量（目标值）之间关系进行建模的一</description></item><item><title>sklearn</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/sklearn/</link><pubDate>Sun, 05 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/sklearn/</guid><description>所有的机器学习算法都是通过转换器（transformer）和估计器（estimator）实现的。 转换器 转换器是用于对数据进行处理的对象。在 scikit-learn</description></item><item><title>k近邻算法</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</guid><description>kNN kNN（k-Nearest Neighbors）算法是一种简单但常用的分类和回归算法。它的核心思想是基于相似性来做预测。具体来说，对于一个测</description></item><item><title>决策树与随机森林</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%86%B3%E7%AD%96%E6%A0%91/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%86%B3%E7%AD%96%E6%A0%91/</guid><description>决策树是一种基于树结构的机器学习算法，通常用于分类和回归分析。它通过一系列的问题或判断来建立一个树状模型，每个节点代表一个判断或决策，每个叶</description></item><item><title>朴素贝叶斯算法</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</guid><description>朴素贝叶斯是一种基于贝叶斯定理的分类算法，它的主要思想是利用先验概率和条件概率来计算后验概率，从而进行分类。 那么什么是先验概率，条件概率和后</description></item><item><title>特征降维</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4/</guid><description>降维是指在某些限定条件下，降低随机变量（特征）个数，得到一组“不相关”主变量的过程。 降低随机变量的个数 正是因为在进行训练的时候，我们都是使用</description></item><item><title>特征提取之字典提取与文本提取</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/tfidf/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/tfidf/</guid><description>字典特征提取 将类别中的特征进行one-hot编码处理。 key value 类别 one-hot编码 独热编码(one-hot) one-hot编码用于将离散的分类</description></item><item><title>特征预处理</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/machine_study/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/machine_study/</guid><description>为什么要进行归一化/标准化？ 特征的单位或者大小相差较大，或者某特征的方差相比其他的特征要大出几个数量级，容易影响（支配）目标结果，使得一些算</description></item><item><title>简单实操elk</title><link>http://zput.github.io/post/_posts/efk/</link><pubDate>Sat, 26 Mar 2016 08:47:11 +0100</pubDate><guid>http://zput.github.io/post/_posts/efk/</guid><description>download repository 1 curl -LOk https://github.com/kzk/docker-compose-efk/archive/master.zip download docker elasticsearch and kibana 1 2 3 4 docker pull docker.elastic.co/elasticsearch/elasticsearch:7.2.0 docker run -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS=&amp;#34;-Xms256m -Xmx256m&amp;#34; -e &amp;#34;discovery.type=single-node&amp;#34; docker.elastic.co/elasticsearch/elasticsearch:7.2.0 1 2 3 4 5 6 7 docker pull docker.elastic.co/kibana/kibana:7.2.0 docker run --link vigilant_villani:elasticsearch -p 5601:5601 {docker-repo}:{version} docker run --link vigilant_villani:elasticsearch -p 5601:5601 docker.elastic.co/kibana/kibana:7.2.0 docker run --link goofy_pasteur:elasticsearch -p 5601:5601 docker.elastic.co/kibana/kibana:7.2.0 docker&amp;rsquo;s contain rename it &amp;mdash;&amp;gt; docker run &amp;ndash;name docker</description></item></channel></rss>