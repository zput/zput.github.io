<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zput's blog</title><link>http://localhost:1313/</link><description>Recent content on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 16 Aug 2021 12:33:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>利用阿里云进行转码</title><link>http://localhost:1313/post/_posts/work/aliyun_transcode_video/</link><pubDate>Mon, 16 Aug 2021 12:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/work/aliyun_transcode_video/</guid><description>整个流程 阿里云控制台配置 开发 注意点 扩展知识 整个流程 阿里云控制台配置 开通视频点播功能 创建RAM用户（支持控制台访问，编程访问） 创建模版组 添加加</description></item><item><title>访问者模式</title><link>http://localhost:1313/post/_posts/%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 24 Nov 2020 15:03:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>什么是访问者模式 访问者模式 来看一个golang语言的例子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</description></item><item><title>三种编程范式</title><link>http://localhost:1313/post/_posts/%E8%8C%83%E5%BC%8F/%E8%8C%83%E5%BC%8F/</link><pubDate>Tue, 20 Oct 2020 15:00:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/%E8%8C%83%E5%BC%8F/%E8%8C%83%E5%BC%8F/</guid><description>从编程范式入手 对于golang来说就是 泛型编程 golang interface{}&amp;ndash;&amp;gt;interface{}/type XXX interface{YYY} reflect 函数编程 golang 仅当一个函数将一个或多个函数作为参数或作为结果返回另一个函数时，才可以将其</description></item><item><title>kafka总结</title><link>http://localhost:1313/post/_posts/tool/kafka/</link><pubDate>Tue, 24 Mar 2020 22:23:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/kafka/</guid><description>Broker 一台kafka服务器就是一个broker。一个集群由多个broker 组成。一个broker可以容纳多个topic。 Topic(主题) Topic ：可</description></item><item><title>conclusion_gitlab_ci_cd</title><link>http://localhost:1313/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</link><pubDate>Tue, 25 Feb 2020 21:06:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</guid><description>大纲 gitlab pipeline gitlab&amp;rsquo;s pipeline一体两面 pipeline定义在项目的 .gitlab-ci.yml里, 由stages串联组成。（每个stages里面</description></item><item><title>mysql高级总结</title><link>http://localhost:1313/post/_posts/tool/mysql/</link><pubDate>Fri, 24 Jan 2020 10:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/mysql/</guid><description>0.重要的知识点 MySQL逻辑架构 1.1. 连接层 1.2. 服务层 1.3. 引擎层(存储引擎是基于表的，而不是数据库) 1.4. 存储层 如何修改字符集(查看1.3) 日志 3.1. 查询</description></item><item><title>postgres高级总结</title><link>http://localhost:1313/post/_posts/tool/postgre/</link><pubDate>Fri, 24 Jan 2020 10:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/postgre/</guid><description>函数 针对postgresql的创建函数脚本 返回表中数据的函数 循环更新表中的数据_也可以多条返回数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>the_process_structure_ci_cd_base_on_gitlab</title><link>http://localhost:1313/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</link><pubDate>Wed, 22 Jan 2020 20:09:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</guid><description>docker/docker-compose主题 https://docs.docker.com/engine/install/centos/ https://docs.docker.com/compose/install/ !!!直接使用docker的官方文档做法就行了。 gitlab主题 DevOps(CI/CD) Container(Docker) Kubernetes Service Mesh why:为什么要</description></item><item><title>telepresence一些使用方法</title><link>http://localhost:1313/post/_posts/kubernets/telepresence/</link><pubDate>Sun, 20 Oct 2019 15:00:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/kubernets/telepresence/</guid><description>1 2 3 4 5 kubectl run service-b --image=datawire/hello-world --port=8000 --expose kubectl get service service-b NAME CLUSTER-IP EXTERNAL-IP PORT(S) AGEservice-b 10.0.0.12 &amp;lt;none&amp;gt; 8000/TCP 1m https://cloud.tencent.com/developer/article/1537743 自从用上 Telepresence 后，本地调试 Kubernetes 中的微服务不再是梦！ https://cloud.tencent.com/developer/article/1537743 https://www.telepresence.io/discussion/how-it-works https://sshuttle.readthedocs.io/en/stable/usage.html#usage-notes https://github.com/datawire/sshuttle k8s自定义controller三部曲</description></item><item><title>Https = http + ssl</title><link>http://localhost:1313/post/_posts/tool/https/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/https/</guid><description>任意一个三位数乘以1001，乘积的末尾三位一定等于它本身 234*1001=234234 120*1001=120120 123*1001=123123 123这个数，乘以91得到了11193，接着我去掉两位只保留后三位，把193 123*91%1000</description></item><item><title>大话跨域</title><link>http://localhost:1313/post/_posts/tool/cros/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/cros/</guid><description>cros what:什么是跨域？ 我有一个域名a.com和一个域名b.com 我在a.com上有一个接口a.com/api，会返回一些数据 我想在b.co</description></item><item><title>迁移本地环境需要用到的</title><link>http://localhost:1313/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</guid><description>首先解决网络问题: download ShadowsocksR for MAC: 这个软件，添加配置了以后，先不要连，需要先更新订阅然后再去连接 vpn/httpproxy ➜ code cat ~/.bashrc 1 2 3 4 5 6 7 #export http_proxy=http://127.0.0.1:1087 #export https_proxy=http://127.0.0.1:1087 export http_proxy=&amp;#34;&amp;#34; export https_proxy=&amp;#34;&amp;#34; #export HTTP_PROXY=&amp;#34;&amp;#34; #export HTTPS_PROXY=&amp;#34;&amp;#34; 软件</description></item><item><title>effective habit</title><link>http://localhost:1313/post/_posts/%E4%B8%AA%E4%BA%BA%E6%88%90%E9%95%BF/effective_habit/</link><pubDate>Sun, 20 May 2018 16:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/%E4%B8%AA%E4%BA%BA%E6%88%90%E9%95%BF/effective_habit/</guid><description>smart法则 目标的价值是什么？如何制定清晰的目标计划？ - 李雨晴的回答 - 知乎 eg: 具体的specific: 找到一份大厂工作。 可衡量的measur</description></item><item><title>多路复用一点理解</title><link>http://localhost:1313/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link><pubDate>Sun, 20 May 2018 16:33:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid><description>why, 为什么需要多路复用? 为什么要多路复用？，为什么引出多路复用。 对socket的I/O操作&amp;ndash;》read，从I/O中得到数据， wri</description></item><item><title>高性能服务器</title><link>http://localhost:1313/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</link><pubDate>Wed, 28 Feb 2018 15:03:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</guid><description>基于通用组件编程 一些注意点 当mainLoop accept一个连接进来，怎么把这个连接放入其他的subLoop中的？ 永远不能让你业务逻辑（一般</description></item><item><title>建立个人仓库</title><link>http://localhost:1313/post/_posts/tool/hexo_and_maupassant/</link><pubDate>Wed, 24 May 2017 12:03:00 +0000</pubDate><guid>http://localhost:1313/post/_posts/tool/hexo_and_maupassant/</guid><description>hexo仓库 build.sh 1 2 3 4 5 6 7 #!/bin/bash npm install git submodule init git submodule update # https://www.haomwei.com/technology/maupassant-hexo.html npm install hexo-renderer-pug --save npm install hexo-renderer-sass --save #the great word 其中hexo仓库可以加上你需要的主题仓库 git submodule add https://github.com/tufu9441/maupassant-hexo.git themes/maupassant source仓库 makefile</description></item></channel></rss>