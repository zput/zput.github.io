<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zput's blog</title><link>http://zput.github.io/</link><description>Recent content on Zput's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 09 Nov 2023 19:00:00 +0000</lastBuildDate><atom:link href="http://zput.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://zput.github.io/post/cloud_native/informer_factory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/cloud_native/informer_factory/</guid><description>探究kubernets其底层实现</description></item><item><title>无监督学习</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/</link><pubDate>Thu, 09 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/</guid><description>无监督学习包含算法 聚类 K-means(K均值聚类) 降维 PCA 一家广告平台需要根据相似的人口学特征和购买习惯将美国人口分成不同的小组，以便广告客户</description></item><item><title>线性回归和逻辑回归</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link><pubDate>Thu, 09 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid><description>线性回归 线性回归(Linear regression)是利用回归方程（函数）对一个或多个自变量（特征值）和因变量（目标值）之间关系进行建模的一</description></item><item><title>sklearn</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/sklearn/</link><pubDate>Sun, 05 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/sklearn/</guid><description>所有的机器学习算法都是通过转换器（transformer）和估计器（estimator）实现的。 转换器 转换器是用于对数据进行处理的对象。在 scikit-learn</description></item><item><title>k近邻算法</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</guid><description>kNN kNN（k-Nearest Neighbors）算法是一种简单但常用的分类和回归算法。它的核心思想是基于相似性来做预测。具体来说，对于一个测</description></item><item><title>决策树与随机森林</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%86%B3%E7%AD%96%E6%A0%91/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%86%B3%E7%AD%96%E6%A0%91/</guid><description>决策树是一种基于树结构的机器学习算法，通常用于分类和回归分析。它通过一系列的问题或判断来建立一个树状模型，每个节点代表一个判断或决策，每个叶</description></item><item><title>朴素贝叶斯算法</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</guid><description>朴素贝叶斯是一种基于贝叶斯定理的分类算法，它的主要思想是利用先验概率和条件概率来计算后验概率，从而进行分类。 那么什么是先验概率，条件概率和后</description></item><item><title>特征降维</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4/</guid><description>降维是指在某些限定条件下，降低随机变量（特征）个数，得到一组“不相关”主变量的过程。 降低随机变量的个数 正是因为在进行训练的时候，我们都是使用</description></item><item><title>特征提取之字典提取与文本提取</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/tfidf/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/tfidf/</guid><description>字典特征提取 将类别中的特征进行one-hot编码处理。 key value 类别 one-hot编码 独热编码(one-hot) one-hot编码用于将离散的分类</description></item><item><title>特征预处理</title><link>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/machine_study/</link><pubDate>Thu, 02 Nov 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/machine_study/</guid><description>为什么要进行归一化/标准化？ 特征的单位或者大小相差较大，或者某特征的方差相比其他的特征要大出几个数量级，容易影响（支配）目标结果，使得一些算</description></item><item><title>面向对象编程在不同语言中落地</title><link>http://zput.github.io/post/_posts/object_oriented/</link><pubDate>Thu, 19 Jan 2023 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/object_oriented/</guid><description>面向对象比较 我们将从封装，继承，多态这三个面向对象编程核心特点来展开。 封装 访问控制 C++ &amp;amp; PHP 我们可以根据访问权限总结出不同的访问类型，如下所示：</description></item><item><title>数据结构与数据类型</title><link>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/data_type_and_data_struct/</link><pubDate>Tue, 13 Dec 2022 22:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/data_type_and_data_struct/</guid><description>把名词分开来联想 数据结构 什么是结构 结构是指在一个系统或者材料之中，互相关联的元素的排列、组织。结构按类别可分为等级结构（有层次的一对多）、网</description></item><item><title>调用关系</title><link>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/invocation_relation/</link><pubDate>Tue, 13 Dec 2022 20:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/invocation_relation/</guid><description>单位 以函数为单位:《请求与响应》 请求与响应参数的判断 默认响应里面如果错误为nil,那么它的实际值的字段不能是nil吧，最好是初始化为对应的空</description></item><item><title>编程范式-泛型编程</title><link>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/swap-search-sum/</link><pubDate>Thu, 20 Oct 2022 21:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/swap-search-sum/</guid><description>泛型 要说泛型，就需要了解类型的本质。 类型 编程语言会有两种类型，一种是内建类型，如 int、float 和 char 等，一种是抽象类型，如 struct、c</description></item><item><title>利用阿里云进行转码</title><link>http://zput.github.io/post/_posts/work/aliyun_transcode_video/</link><pubDate>Mon, 16 Aug 2021 12:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/work/aliyun_transcode_video/</guid><description>整个流程 阿里云控制台配置 开发 注意点 扩展知识 整个流程 阿里云控制台配置 开通视频点播功能 创建RAM用户（支持控制台访问，编程访问） 创建模版组 添加加</description></item><item><title>访问者模式</title><link>http://zput.github.io/post/_posts/%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link><pubDate>Tue, 24 Nov 2020 15:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E6%A8%A1%E5%BC%8F/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid><description>什么是访问者模式 访问者模式 来看一个golang语言的例子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</description></item><item><title>编程范式</title><link>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E8%8C%83%E5%BC%8F/</link><pubDate>Tue, 20 Oct 2020 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E8%8C%83%E5%BC%8F/</guid><description>编程范式 Programming paradigms are a way to classify programming languages based on their features. Languages can be classified into multiple paradigms. ——From Wikipedia 编程范型、编程范式或程序设计法，是指软件工程中的一类典型的编程风格。 编程范型提</description></item><item><title>编程范式-函数编程</title><link>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F_%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</link><pubDate>Tue, 20 Oct 2020 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F_%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</guid><description>函数编程 仅当一个函数将一个或多个函数作为参数或作为结果返回另一个函数时，才可以将其视为高阶函数。 正宗的函数编程的概念是什么？ stateles</description></item><item><title>编程范式-面向对象编程</title><link>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</link><pubDate>Tue, 20 Oct 2020 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</guid><description>面向对象编程 the underlying logic 这本书的 23 个经典的设计模式，基本上就是说了两个面向对象的核心理念： &amp;ldquo;Program to an ‘interface’, not an ‘implementa</description></item><item><title>kafka总结</title><link>http://zput.github.io/post/mrmk/kafka/</link><pubDate>Tue, 24 Mar 2020 22:23:00 +0000</pubDate><guid>http://zput.github.io/post/mrmk/kafka/</guid><description>Kafka Broker 一台kafka服务器就是一个broker。一个集群由多个broker 组成。一个broker可以容纳多个topic。 Topic(主题) Topic ：</description></item><item><title>conclusion_gitlab_ci_cd</title><link>http://zput.github.io/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</link><pubDate>Tue, 25 Feb 2020 21:06:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/gitlab/conclusion_gitlab_ci_cd/</guid><description>大纲 gitlab pipeline gitlab&amp;rsquo;s pipeline一体两面 pipeline定义在项目的 .gitlab-ci.yml里, 由stages串联组成。（每个stages里面</description></item><item><title>postgres高级总结</title><link>http://zput.github.io/post/_posts/tool/postgre/</link><pubDate>Fri, 24 Jan 2020 10:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/postgre/</guid><description>函数 针对postgresql的创建函数脚本 返回表中数据的函数 循环更新表中的数据_也可以多条返回数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>the_process_structure_ci_cd_base_on_gitlab</title><link>http://zput.github.io/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</link><pubDate>Wed, 22 Jan 2020 20:09:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/gitlab/the_process_structure_ci_cd_base_on_gitlab/</guid><description>docker/docker-compose主题 https://docs.docker.com/engine/install/centos/ https://docs.docker.com/compose/install/ !!!直接使用docker的官方文档做法就行了。 gitlab主题 DevOps(CI/CD) Container(Docker) Kubernetes Service Mesh why:为什么要</description></item><item><title>telepresence一些使用方法</title><link>http://zput.github.io/post/_posts/kubernets/telepresence/</link><pubDate>Sun, 20 Oct 2019 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/kubernets/telepresence/</guid><description>1 2 3 4 5 kubectl run service-b --image=datawire/hello-world --port=8000 --expose kubectl get service service-b NAME CLUSTER-IP EXTERNAL-IP PORT(S) AGEservice-b 10.0.0.12 &amp;lt;none&amp;gt; 8000/TCP 1m https://cloud.tencent.com/developer/article/1537743 自从用上 Telepresence 后，本地调试 Kubernetes 中的微服务不再是梦！ https://cloud.tencent.com/developer/article/1537743 https://www.telepresence.io/discussion/how-it-works https://sshuttle.readthedocs.io/en/stable/usage.html#usage-notes https://github.com/datawire/sshuttle k8s自定义controller三部曲</description></item><item><title>进程间通讯</title><link>http://zput.github.io/post/_posts/process_communication/</link><pubDate>Thu, 04 Jul 2019 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/process_communication/</guid><description>including IPC的方式通常有 管道（包括无名管道和命名管道）:PIPE 信号量: 消息队列: 信号量 共享存储: mmap() shm Socket &amp;mdash; Streams: ##including 管道中的无名管道是存放在文件描述符</description></item><item><title>谈谈线程</title><link>http://zput.github.io/post/_posts/thread/</link><pubDate>Thu, 04 Jul 2019 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/thread/</guid><description>什么是进程？ 从概念上来说：进程是计算机顺序执行的程序的过程，它是系统资源分配的最小单位。从我个人理解来说它类似于一个容器，里面有很多的资源（</description></item><item><title>程序需要考虑的资源消耗问题</title><link>http://zput.github.io/post/_posts/%E7%A8%8B%E5%BA%8F%E4%B8%8E%E6%B6%88%E8%80%97/</link><pubDate>Sat, 22 Jun 2019 19:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E7%A8%8B%E5%BA%8F%E4%B8%8E%E6%B6%88%E8%80%97/</guid><description>What do the terms “CPU bound” and “I/O bound” mean? 处理器更优先于调度I/O消耗型进程？ cpu中断 系统服务（这里不局限于golang写的后台</description></item><item><title>Linux的socket相关函数调用时系统做了什么</title><link>http://zput.github.io/post/_posts/close_shutdown/</link><pubDate>Fri, 21 Jun 2019 16:30:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/close_shutdown/</guid><description>accept write supplement 1. MSS与TCP的分片 2. 发送方法返回成功后，数据一定发送到了TCP的另一端吗？ 3、Nagle算法、滑动窗口、拥塞窗口对发送方法的影响 （</description></item><item><title>线程死锁</title><link>http://zput.github.io/post/_posts/lock/</link><pubDate>Fri, 21 Jun 2019 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/lock/</guid><description>线程死锁 线程死锁 什么是线程死锁，如何解决 产生死锁的条件有四个： 互斥条件：所谓互斥就是进程在某一时间内独占资源。 请求与保持条件：一个进程因请求</description></item><item><title>异步与同步</title><link>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/synchronous_asynchronous/</link><pubDate>Fri, 21 Jun 2019 15:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E6%A6%82%E5%BF%B5%E5%8E%9F%E7%90%86%E7%9A%84%E6%80%9D%E8%80%83/synchronous_asynchronous/</guid><description>同步和异步他们的关注点的是消息通信机制 (synchronous communication/ asynchronous communication): 同步，就是调用某个东西时候，调用方得等待这个调用返回结果才能继续往后执行。 异步，和同步相反调用</description></item><item><title>编译原理-从下到上解析</title><link>http://zput.github.io/post/_posts/%E4%BB%8E%E4%B8%8B%E5%BE%80%E4%B8%8Aparse/</link><pubDate>Tue, 26 Mar 2019 08:47:11 +0100</pubDate><guid>http://zput.github.io/post/_posts/%E4%BB%8E%E4%B8%8B%E5%BE%80%E4%B8%8Aparse/</guid><description>LR(0) 附录 形态和状态 形态 起始形态 已完成形态(可折叠形态[不是可折叠状态]) 形态的转移 延伸形态 形态集合 形态集合的闭合 状态 起始状态(记为I0) 形态集</description></item><item><title>Https = http + ssl</title><link>http://zput.github.io/post/_posts/tool/https/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/https/</guid><description>任意一个三位数乘以1001，乘积的末尾三位一定等于它本身 234*1001=234234 120*1001=120120 123*1001=123123 123这个数，乘以91得到了11193，接着我去掉两位只保留后三位，把193 123*91%1000</description></item><item><title>大话跨域</title><link>http://zput.github.io/post/_posts/tool/cros/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/cros/</guid><description>cros what:什么是跨域？ 我有一个域名a.com和一个域名b.com 我在a.com上有一个接口a.com/api，会返回一些数据 我想在b.co</description></item><item><title>迁移本地环境需要用到的</title><link>http://zput.github.io/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</link><pubDate>Thu, 24 May 2018 12:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/%E8%BF%81%E7%A7%BB%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84/</guid><description>首先解决网络问题: download ShadowsocksR for MAC: 这个软件，添加配置了以后，先不要连，需要先更新订阅然后再去连接 vpn/httpproxy ➜ code cat ~/.bashrc 1 2 3 4 5 6 7 #export http_proxy=http://127.0.0.1:1087 #export https_proxy=http://127.0.0.1:1087 export http_proxy=&amp;#34;&amp;#34; export https_proxy=&amp;#34;&amp;#34; #export HTTP_PROXY=&amp;#34;&amp;#34; #export HTTPS_PROXY=&amp;#34;&amp;#34; 软件</description></item><item><title>effective habit</title><link>http://zput.github.io/post/_posts/%E4%B8%AA%E4%BA%BA%E6%88%90%E9%95%BF/effective_habit/</link><pubDate>Sun, 20 May 2018 16:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E4%B8%AA%E4%BA%BA%E6%88%90%E9%95%BF/effective_habit/</guid><description>smart法则 目标的价值是什么？如何制定清晰的目标计划？ - 李雨晴的回答 - 知乎 eg: 具体的specific: 找到一份大厂工作。 可衡量的measur</description></item><item><title>多路复用一点理解</title><link>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link><pubDate>Sun, 20 May 2018 16:33:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid><description>why, 为什么需要多路复用? 为什么要多路复用？，为什么引出多路复用。 对socket的I/O操作&amp;ndash;》read，从I/O中得到数据， wri</description></item><item><title>高性能服务器</title><link>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</link><pubDate>Wed, 28 Feb 2018 15:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%AB%98%E6%80%A7%E8%83%BD/</guid><description>基于通用组件编程 一些注意点 当mainLoop accept一个连接进来，怎么把这个连接放入其他的subLoop中的？ 永远不能让你业务逻辑（一般</description></item><item><title>建立个人仓库</title><link>http://zput.github.io/post/_posts/tool/hexo_and_maupassant/</link><pubDate>Wed, 24 May 2017 12:03:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/tool/hexo_and_maupassant/</guid><description>hexo仓库 build.sh 1 2 3 4 5 6 7 #!/bin/bash npm install git submodule init git submodule update # https://www.haomwei.com/technology/maupassant-hexo.html npm install hexo-renderer-pug --save npm install hexo-renderer-sass --save #the great word 其中hexo仓库可以加上你需要的主题仓库 git submodule add https://github.com/tufu9441/maupassant-hexo.git themes/maupassant source仓库 makefile</description></item><item><title>简单实操elk</title><link>http://zput.github.io/post/_posts/efk/</link><pubDate>Sat, 26 Mar 2016 08:47:11 +0100</pubDate><guid>http://zput.github.io/post/_posts/efk/</guid><description>download repository 1 curl -LOk https://github.com/kzk/docker-compose-efk/archive/master.zip download docker elasticsearch and kibana 1 2 3 4 docker pull docker.elastic.co/elasticsearch/elasticsearch:7.2.0 docker run -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS=&amp;#34;-Xms256m -Xmx256m&amp;#34; -e &amp;#34;discovery.type=single-node&amp;#34; docker.elastic.co/elasticsearch/elasticsearch:7.2.0 1 2 3 4 5 6 7 docker pull docker.elastic.co/kibana/kibana:7.2.0 docker run --link vigilant_villani:elasticsearch -p 5601:5601 {docker-repo}:{version} docker run --link vigilant_villani:elasticsearch -p 5601:5601 docker.elastic.co/kibana/kibana:7.2.0 docker run --link goofy_pasteur:elasticsearch -p 5601:5601 docker.elastic.co/kibana/kibana:7.2.0 docker&amp;rsquo;s contain rename it &amp;mdash;&amp;gt; docker run &amp;ndash;name docker</description></item><item><title/><link>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/_posts/%E8%8C%83%E5%BC%8F/uml/</guid><description>关联关系 组合关系中，部分的实例化在整体中进行。聚合关系中，部分的实例化过程在整体外进行，然后通过某种方式注入给整体。 另一种表现可能是，组合是</description></item><item><title/><link>http://zput.github.io/post/cloud_native/sandbox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/cloud_native/sandbox/</guid><description>&lt;!DOCTYPE html> README &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x7B80;&amp;#x6613;&amp;#x6C99;&amp;#x76D2;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8BBE;&amp;#x8BA1; &amp;#x67B6;&amp;#x6784; &amp;#x7EC4;&amp;#x4EF6;&amp;#x529F;&amp;#x80FD; Sandbox Controller (&amp;#x6C99;&amp;#x76D2;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) Scheduler (&amp;#x8C03;&amp;#x5EA6;&amp;#x5668;) &amp;#x8BBE;&amp;#x8BA1;&amp;#x6D41;&amp;#x7A0B;&amp;#x56FE; Controller Worker Monitor (&amp;#x76D1;&amp;#x63A7;) Kube Scale Storage Controller (&amp;#x5B58;&amp;#x50A8;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) Storage Policy Controller (&amp;#x5B58;&amp;#x50A8;&amp;#x7B56;&amp;#x7565;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) Life Cycle Controller (&amp;#x751F;&amp;#x547D;&amp;#x5468;&amp;#x671F;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) Sandbox &amp;#x5BF9;&amp;#x8C61; &amp;#x955C;&amp;#x50CF;&amp;#x4ED3;&amp;#x5E93;&amp;#x5730;&amp;#x5740;&amp;#x7EA6;&amp;#x5B9A; &amp;#x5B58;&amp;#x50A8;&amp;#x7C7B;&amp;#x578B;&amp;#xFF08;Storage Type&amp;#xFF09; &amp;#x6E32;&amp;#x67D3;&amp;#x7684; k8s &amp;#x5BF9;&amp;#x8C61; Kong API &amp;#x5BF9;&amp;#x8C61; &amp;#x6570;&amp;#x636E;&amp;#x5E93; sandbox_meta &amp;#x7B80;&amp;#x6613;&amp;#x6C99;&amp;#x76D2;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8BBE;&amp;#x8BA1; &amp;#x67B6;&amp;#x6784; &amp;#x6C99;&amp;#x76D2;&amp;#x7CFB;&amp;#x7EDF; &amp;#x67B6;&amp;#x6784;&amp;#x57FA;&amp;#x4E8E; Kubernetes &amp;#x8BBE;&amp;#x8BA1;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7; CRD(CustomResourceDefinition) &amp;#x5B9E;&amp;#x73B0;&amp;#x6C99;&amp;#x76D2;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x7B80;&amp;#x5316;&amp;#x6C99;&amp;#x76D2;&amp;#x7684;&amp;#x7BA1;&amp;#x7406;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x7EDF;&amp;#x4E00;&amp;#x901A;&amp;#x8FC7; k8s &amp;#x7684;&amp;#x7BA1;&amp;#x7406; API &amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x6C99;&amp;#x76D2;&amp;#x7684;&amp;#x201C;&amp;#x589E;&amp;#x5220;&amp;#x6539;&amp;#x67E5;&amp;#x201D;
&amp;#x7EC4;&amp;#x4EF6;&amp;#x529F;&amp;#x80FD; Sandbox Controller (&amp;#x6C99;&amp;#x76D2;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) &amp;#x6269;&amp;#x5C55;&amp;#x7684; Kubernetes &amp;#x63A7;&amp;#x5236;&amp;#x5668;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x76D1;&amp;#x542C; Sandbox &amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53D8;&amp;#x5316; &amp;#x6839;&amp;#x636E; Sandbox &amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#x6765;&amp;#x63A7;&amp;#x5236;&amp;#x76F8;&amp;#x5E94;&amp;#x7684; k8s &amp;#x7EC4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;Deployment&amp;#x3001;Service &amp;#x901A;&amp;#x8FC7; API &amp;#x63A5;&amp;#x53E3;&amp;#x64CD;&amp;#x4F5C; Kong &amp;#x7F51;&amp;#x5173;&amp;#x589E;&amp;#x52A0;&amp;#x6216;&amp;#x8005;&amp;#x5220;&amp;#x9664;&amp;#x5BF9;&amp;#x5E94;&amp;#x6C99;&amp;#x76D2;&amp;#x7684;&amp;#x8DEF;&amp;#x7531; Scheduler (&amp;#x8C03;&amp;#x5EA6;&amp;#x5668;) &amp;#x63D0;&amp;#x4F9B; Sandbox Controller &amp;#x7684; Web &amp;#x63A5;&amp;#x53E3; &amp;#x8C03;&amp;#x7528; Storage Policy Controller &amp;#x7533;&amp;#x8BF7;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x786E;&amp;#x5B9A;&amp;#x6C99;&amp;#x76D2;&amp;#x6240;&amp;#x5728;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4; &amp;#x521B;&amp;#x5EFA; Sandbox &amp;#x5BF9;&amp;#x8C61; &amp;#x8BBE;&amp;#x8BA1;&amp;#x6D41;&amp;#x7A0B;&amp;#x56FE; Controller Worker Monitor (&amp;#x76D1;&amp;#x63A7;) &amp;#x6839;&amp;#x636E; Storage Policy Controller &amp;#x914D;&amp;#x7F6E;&amp;#x7684;&amp;#x7B56;&amp;#x7565;&amp;#x76D1;&amp;#x63A7;&amp;#x5B58;&amp;#x50A8;&amp;#x72B6;&amp;#x51B5; &amp;#x67E5;&amp;#x8BE2;&amp;#x7279;&amp;#x5B9A;&amp;#x7528;&amp;#x6237;&amp;#x7684;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x5927;&amp;#x5C0F; Kube Scale &amp;#x76D1;&amp;#x63A7;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6574;&amp;#x4F53;&amp;#x8D1F;&amp;#x8F7D;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x7F29;&amp;#x653E;&amp;#x96C6;&amp;#x7FA4; &amp;#x62BD;&amp;#x8C61;&amp;#x4E91;&amp;#x63D0;&amp;#x4F9B;&amp;#x5546;&amp;#x7684;&amp;#x4E3B;&amp;#x673A;&amp;#x65B0;&amp;#x589E;&amp;#x5165;&amp;#x7FA4;&amp;#x548C;&amp;#x79BB;&amp;#x7FA4;&amp;#x5220;&amp;#x9664; Storage Controller (&amp;#x5B58;&amp;#x50A8;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) &amp;#x62BD;&amp;#x8C61; GlusterFS &amp;#x7684;&amp;#x589E;&amp;#x5220;&amp;#x6539;&amp;#x67E5; Storage Policy Controller (&amp;#x5B58;&amp;#x50A8;&amp;#x7B56;&amp;#x7565;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) &amp;#x6839;&amp;#x636E;&amp;#x914D;&amp;#x7F6E;&amp;#x7684;&amp;#x5B58;&amp;#x50A8;&amp;#x7B56;&amp;#x7565;&amp;#x8C03;&amp;#x7528; Storage Controller Life Cycle Controller (&amp;#x751F;&amp;#x547D;&amp;#x5468;&amp;#x671F;&amp;#x63A7;&amp;#x5236;&amp;#x5668;) &amp;#x63D0;&amp;#x4F9B;&amp;#x5FC3;&amp;#x8DF3;&amp;#x63A5;&amp;#x53E3;&amp;#x4FDD;&amp;#x8BC1; Sandbox &amp;#x5B58;&amp;#x6D3B;&amp;#x4EE5;&amp;#x53CA;&amp;#x6C99;&amp;#x76D2;&amp;#x7684;&amp;#x56DE;&amp;#x6536; &amp;#x56DE;&amp;#x6536;&amp;#x7F51;&amp;#x5173;&amp;#x8DEF;&amp;#x7531;&amp;#x6761;&amp;#x76EE; &amp;#x56DE;&amp;#x6536;&amp;#x4E34;&amp;#x65F6;&amp;#x7528;&amp;#x6237;&amp;#x7684;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4; Sandbox &amp;#x5BF9;&amp;#x8C61; apiVersion: runtime.</description></item><item><title/><link>http://zput.github.io/post/postgraduate/discrete_math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/postgraduate/discrete_math/</guid><description>&lt;!DOCTYPE html> &amp;#x79BB;&amp;#x6563;&amp;#x6570;&amp;#x5B66; &amp;#x79BB;&amp;#x6563;&amp;#x6570;&amp;#x5B66; &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x79BB;&amp;#x6563;&amp;#x6570;&amp;#x5B66; &amp;#x6570;&amp;#x7406;&amp;#x903B;&amp;#x8F91; &amp;#x547D;&amp;#x9898;&amp;#x903B;&amp;#x8F91; &amp;#x6C42;&amp;#x4E3B;&amp;#x6790;&amp;#x53D6;/&amp;#x5408;&amp;#x53D6;&amp;#x8303;&amp;#x5F0F; &amp;#x771F;&amp;#x503C;&amp;#x8868;&amp;#x53D1; &amp;#x7B49;&amp;#x503C;&amp;#x6F14;&amp;#x7B97;&amp;#x6CD5; &amp;#x8C13;&amp;#x8BCD;&amp;#x903B;&amp;#x8F91; &amp;#x8BC1;&amp;#x660E;&amp;#x6CD5; &amp;#x8BC1;&amp;#x660E;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x5DE5;&amp;#x5177; &amp;#x8BC1;&amp;#x660E;&amp;#x65B9;&amp;#x5F0F; &amp;#x6F14;&amp;#x7ECE;&amp;#x6CD5; CP&amp;#x89C4;&amp;#x5219; &amp;#x53CD;&amp;#x8BC1;&amp;#x6CD5; &amp;#x524D;&amp;#x675F;&amp;#x8303;&amp;#x5F0F; &amp;#x51FD;&amp;#x6570; &amp;#x8BC1;&amp;#x660E;&amp;#x5355;&amp;#x5C04;&amp;#x3001;&amp;#x6EE1;&amp;#x5C04;&amp;#x548C;&amp;#x53CC;&amp;#x5C04;(&amp;#x5355;&amp;#x5C04;+&amp;#x6EE1;&amp;#x5C04;) &amp;#x96C6;&amp;#x5408; &amp;#x5173;&amp;#x7CFB; &amp;#x5E8F;&amp;#x5076;&amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#x7528;R &amp;#x5173;&amp;#x7CFB;&amp;#x56FE;/&amp;#x5173;&amp;#x7CFB;&amp;#x77E9;&amp;#x9635; &amp;#x4E94;&amp;#x4E2A;&amp;#x5173;&amp;#x7CFB; &amp;#x8FD0;&amp;#x7B97; =(&amp;#x7B49;&amp;#x4EF7;) &amp;lt;=(&amp;#x504F;&amp;#x5E8F;) &amp;lt;(&amp;#x62DF;&amp;#x5E8F;) &amp;#x4E00;&amp;#x4E9B;&amp;#x7528;&amp;#x8BCD; &amp;#x9898;&amp;#x578B; &amp;#x5173;&amp;#x7CFB;&amp;#x77E9;&amp;#x9635;&amp;#x5224;&amp;#x65AD;&amp;#x81EA;&amp;#x53CD;/&amp;#x5BF9;&amp;#x79F0;/&amp;#x4F20;&amp;#x9012; &amp;#x6700;&amp;#x5927;/&amp;#x5C0F;&amp;#x5143;-&amp;#x6781;&amp;#x5927;/&amp;#x5C0F;&amp;#x5143;-&amp;#x4E0A;/&amp;#x4E0B;&amp;#x754C; &amp;#x6C42;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x5212;&amp;#x5206; &amp;#x6C42;&amp;#x5173;&amp;#x7CFB;R&amp;#x5728;A&amp;#x5230;B(&amp;#x53EF;&amp;#x80FD;&amp;#x4E3A;A)&amp;#x5212;&amp;#x5206;&amp;#x5757; &amp;#x56FE; &amp;#x77E9;&amp;#x9635; &amp;#x90BB;&amp;#x63A5;&amp;#x77E9;&amp;#x9635;{\color{Red}&amp;#x90BB;&amp;#x63A5;&amp;#x77E9;&amp;#x9635;}&amp;#x90BB;&amp;#x63A5;&amp;#x77E9;&amp;#x9635; &amp;#x90BB;&amp;#x63A5;&amp;#x70B9;-&amp;#x90BB;&amp;#x63A5;&amp;#x8FB9; &amp;#x56FE;&amp;#x7684;&amp;#x5206;&amp;#x7C7B; &amp;#x5EA6; &amp;#x901A;&amp;#x8DEF;/&amp;#x56DE;&amp;#x8DEF; &amp;#x8FDE;&amp;#x901A;&amp;#x800C;&amp;#x4E0D;&amp;#x542B;&amp;#x56DE;&amp;#x8DEF;&amp;#x56FE;(&amp;#x65E0;&amp;#x5411;&amp;#x6811;)(&amp;#x7B80;&amp;#x79F0;&amp;#x6811;{\color{red}&amp;#x6811;}&amp;#x6811;) &amp;#x4E8C;&amp;#x53C9;&amp;#x6811;&amp;#x2212;&amp;#x6811;&amp;#xFF0C;&amp;#x5173;&amp;#x4E8E;&amp;#x5EA6;&amp;#x7684;&amp;#x603B;&amp;#x7ED3;{\color{red}&amp;#x4E8C;&amp;#x53C9;&amp;#x6811;-&amp;#x6811;&amp;#xFF0C;&amp;#x5173;&amp;#x4E8E;&amp;#x5EA6;&amp;#x7684;&amp;#x603B;&amp;#x7ED3;}&amp;#x4E8C;&amp;#x53C9;&amp;#x6811;&amp;#x2212;&amp;#x6811;&amp;#xFF0C;&amp;#x5173;&amp;#x4E8E;&amp;#x5EA6;&amp;#x7684;&amp;#x603B;&amp;#x7ED3; &amp;#x6700;&amp;#x5C0F;&amp;#x751F;&amp;#x6210;&amp;#x6811; &amp;#x7279;&amp;#x6B8A;&amp;#x56FE;{\color{red}&amp;#x7279;&amp;#x6B8A;&amp;#x56FE;}&amp;#x7279;&amp;#x6B8A;&amp;#x56FE; &amp;#x6B27;&amp;#x62C9;&amp;#x56FE; &amp;#x54C8;&amp;#x5BC6;&amp;#x987F;&amp;#x56FE; &amp;#x5076;&amp;#x56FE;(&amp;#x4E8C;&amp;#x5206;&amp;#x56FE;/&amp;#x4E8C;&amp;#x90E8;&amp;#x56FE;);&amp;#x6709;&amp;#x4E2A;&amp;#x5076;&amp;#x5B57;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x56DE;&amp;#x8DEF;&amp;#x90FD;&amp;#x662F;&amp;#x5076;&amp;#x6570; &amp;#x9898;&amp;#x578B; &amp;#x8FDE;&amp;#x901A;&amp;#x5224;&amp;#x65AD; &amp;#x6C42;&amp;#x5EA6;&amp;#x6570;&amp;#x5E8F;&amp;#x5217;&amp;#x662F;&amp;#x5426;&amp;#x53EF;&amp;#x56FE; &amp;#x81F3;&amp;#x5C11;&amp;#x6709;&amp;#x591A;&amp;#x5C11;&amp;#x4E2A;&amp;#x7ED3;&amp;#x70B9; &amp;#x4EE3;&amp;#x6570;&amp;#x7CFB;&amp;#x7EDF; &amp;#x534A;&amp;#x7FA4; &amp;#x7FA4; &amp;#x6C42;&amp;#x5B50;&amp;#x7FA4; &amp;#x62C9;&amp;#x683C;&amp;#x6717;&amp;#x65E5;&amp;#x5B9A;&amp;#x7406; &amp;#x7FA4;&amp;#x7684;&amp;#x9636; &amp;#x7528;&amp;#x7FA4;&amp;#x7684;&amp;#x9636;/&amp;#x5B50;&amp;#x7FA4;&amp;#x7684;&amp;#x9636; &amp;#x5468;&amp;#x671F; &amp;#x7FA4;&amp;#x7684;&amp;#x9636; &amp;#x751F;&amp;#x6210;&amp;#x5143; &amp;#x8BC1;&amp;#x660E;&amp;#x7FA4;&amp;lt;H, *&amp;gt;&amp;#x662F;&amp;#x7FA4;&amp;lt;G, *&amp;gt;&amp;#x7684;&amp;#x5B50;&amp;#x7FA4; &amp;#x5DE6;&amp;#x53F3;&amp;#x966A;&amp;#x7FA4; &amp;#x540C;&amp;#x6001;/&amp;#x540C;&amp;#x6784; &amp;#x5FEB;&amp;#x901F;&amp;#x56DE;&amp;#x987E; &amp;#x9644;&amp;#x5F55; &amp;#x6570;&amp;#x7406;&amp;#x903B;&amp;#x8F91; &amp;#x547D;&amp;#x9898;&amp;#x903B;&amp;#x8F91; &amp;#x6790;&amp;#x53D6; &amp;#x2228;\vee&amp;#x2228; -&amp;gt; &amp;#x6216; =&amp;gt; &amp;#x5B50;&amp;#x53E5; + &amp;#x2227;\wedge&amp;#x2227; =&amp;gt; &amp;#x5408;&amp;#x53D6;&amp;#x8303;&amp;#x5F0F;(&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x51FA;&amp;#x516C;&amp;#x5F0F;&amp;#x4F55;&amp;#x65F6;&amp;#x4E3A;&amp;#x5047;) =&amp;gt; &amp;#x6781;&amp;#x5C0F;&amp;#x9879;&amp;#x2212;&amp;gt;&amp;#x2227;(&amp;#x5E76;&amp;#x96C6;&amp;#x5C31;&amp;#x4E3A;&amp;#x6781;&amp;#x5C0F;){\color{Red} &amp;#x6781;&amp;#x5C0F;&amp;#x9879;-&amp;gt; \wedge (&amp;#x5E76;&amp;#x96C6;&amp;#x5C31;&amp;#x4E3A;&amp;#x6781;&amp;#x5C0F;)}&amp;#x6781;&amp;#x5C0F;&amp;#x9879;&amp;#x2212;&amp;gt;&amp;#x2227;(&amp;#x5E76;&amp;#x96C6;&amp;#x5C31;&amp;#x4E3A;&amp;#x6781;&amp;#x5C0F;) =&amp;gt; &amp;#x9ED8;&amp;#x8BA4;&amp;#x4E3A;1(&amp;#x5C0F;&amp;#x5B57;&amp;#x7684;&amp;#x4E2D;&amp;#x95F4;&amp;#x4E3A;1),&amp;#x5B83;&amp;#x7684;&amp;#x53CD;&amp;#x4E3A;0 &amp;#x5408;&amp;#x53D6; &amp;#x2227;\wedge&amp;#x2227; -&amp;gt; &amp;#x4E14; =&amp;gt; &amp;#x77ED;&amp;#x8BED; + &amp;#x2228;\vee&amp;#x2228; =&amp;gt; &amp;#x6790;&amp;#x53D6;&amp;#x8303;&amp;#x5F0F;(&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x51FA;&amp;#x516C;&amp;#x5F0F;&amp;#x4F55;&amp;#x65F6;&amp;#x4E3A;&amp;#x771F;,&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3A;&amp;#x771F;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4E3A;&amp;#x771F;) =&amp;gt; &amp;#x6781;&amp;#x5927;&amp;#x9879;&amp;#x2212;&amp;gt;&amp;#x2228;(&amp;#x8054;&amp;#x5408;(&amp;#x6216;)&amp;#x8D77;&amp;#x6765;&amp;#x770B;&amp;#x8C01;&amp;#x5927;){\color{Red} &amp;#x6781;&amp;#x5927;&amp;#x9879;-&amp;gt; \vee (&amp;#x8054;&amp;#x5408;(&amp;#x6216;)&amp;#x8D77;&amp;#x6765;&amp;#x770B;&amp;#x8C01;&amp;#x5927;)}&amp;#x6781;&amp;#x5927;&amp;#x9879;&amp;#x2212;&amp;gt;&amp;#x2228;(&amp;#x8054;&amp;#x5408;(&amp;#x6216;)&amp;#x8D77;&amp;#x6765;&amp;#x770B;&amp;#x8C01;&amp;#x5927;) =&amp;gt; &amp;#x9ED8;&amp;#x8BA4;&amp;#x4E3A;0,&amp;#x5B83;&amp;#x7684;&amp;#x53CD;&amp;#x4E3A;1 &amp;#x4E3B;&amp;#x6790;&amp;#x53D6;&amp;#x8303;&amp;#x5F0F;:&amp;#x6BCF;&amp;#x4E2A;&amp;#x77ED;&amp;#x8BED;(&amp;#x4E3B;&amp;#x6790;&amp;#x53D6;(&amp;#x2228;,&amp;#x5B83;&amp;#x7684;&amp;#x53CD;(&amp;#x2227;),&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x77ED;&amp;#x8BED;{\color{Red} &amp;#x4E3B;&amp;#x6790;&amp;#x53D6;(\vee, &amp;#x5B83;&amp;#x7684;&amp;#x53CD;(\wedge),&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x77ED;&amp;#x8BED; }&amp;#x4E3B;&amp;#x6790;&amp;#x53D6;(&amp;#x2228;,&amp;#x5B83;&amp;#x7684;&amp;#x53CD;(&amp;#x2227;),&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x77ED;&amp;#x8BED;)&amp;#x662F;&amp;#x6781;&amp;#x5C0F;&amp;#x9879;,&amp;#x6309;&amp;#x7167;&amp;#x7F16;&amp;#x7801;&amp;#x4ECE;&amp;#x5C0F;&amp;#x5230;&amp;#x5927;&amp;#x6392;&amp;#x5217; &amp;#x4E3B;&amp;#x5408;&amp;#x53D6;&amp;#x8303;&amp;#x5F0F;:&amp;#x6BCF;&amp;#x4E2A;&amp;#x5B50;&amp;#x53E5;&amp;#x662F;&amp;#x6781;&amp;#x5927;&amp;#x9879;,&amp;#x6309;&amp;#x7167;&amp;#x7F16;&amp;#x7801;&amp;#x4ECE;&amp;#x5C0F;&amp;#x5230;&amp;#x5927;&amp;#x6392;&amp;#x5217; &amp;#x5224;&amp;#x65AD;&amp;#x8574;&amp;#x542B;&amp;#x7684;&amp;#x771F;&amp;#x5047;</description></item><item><title/><link>http://zput.github.io/post/postgraduate/english/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/postgraduate/english/</guid><description>&lt;!DOCTYPE html> &amp;#x82F1;&amp;#x8BED; &amp;#x82F1;&amp;#x8BED; &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x82F1;&amp;#x8BED; the order of doing questions in the examination &amp;#x4F5C;&amp;#x6587; &amp;#x5C0F;&amp;#x4F5C;&amp;#x6587; Letter of Advice/Suggestion Letter of Complaint Letter of Invitation TODO &amp;#x9898;&amp;#x76EE;&amp;#x7C7B;&amp;#x578B; Use of English Reading Comprehension &amp;#x9605;&amp;#x8BFB;&amp;#x7406;&amp;#x89E3; &amp;#x65B0;&amp;#x9898;&amp;#x578B; Translation writing &amp;#x5C0F;&amp;#x4F5C;&amp;#x6587; &amp;#x5927;&amp;#x4F5C;&amp;#x6587; basic knowledge replicat self introduction 1 make a self-introduction 2 campus and work experience 3 prospect summary &amp;#x9644;&amp;#x5F55; the order of doing questions in the examination &amp;#x4F5C;&amp;#x6587;&amp;#x2192;&amp;#x9605;&amp;#x8BFB;&amp;#x7406;&amp;#x89E3;&amp;#x2192;&amp;#x65B0;&amp;#x9898;&amp;#x578B;&amp;#x2192;&amp;#x7FFB;&amp;#x8BD1;&amp;#x2192;&amp;#x5B8C;&amp;#x5F62;&amp;#x586B;&amp;#x7A7A;
&amp;#x4F5C;&amp;#x6587; the fact that ......manifests,xxx&amp;#x4E8B;&amp;#x4EF6; &amp;#x8868;&amp;#x660E;</description></item><item><title/><link>http://zput.github.io/post/postgraduate/fundamental_math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/postgraduate/fundamental_math/</guid><description>&lt;!DOCTYPE html> &amp;#x57FA;&amp;#x7840;&amp;#x6570;&amp;#x5B66; &amp;#x57FA;&amp;#x7840;&amp;#x6570;&amp;#x5B66; &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x57FA;&amp;#x7840;&amp;#x6570;&amp;#x5B66; hight math function-limitation-continuous Integral &amp;#x6570;&amp;#x5217;/&amp;#x7EA7;&amp;#x6570; &amp;#x70B9;&amp;#x79EF; &amp;#x521D;&amp;#x7B49; &amp;#x51FD;&amp;#x6570; 2^x &amp;#x7531;&amp;#x5706;&amp;#x9525;&amp;#x5BFC;&amp;#x51FA;&amp;#x7684;(&amp;#x629B;&amp;#x7269;&amp;#x7EBF;-&amp;#x692D;&amp;#x5706;-&amp;#x5706;-&amp;#x53CC;&amp;#x66F2;&amp;#x7EBF;) &amp;#x629B;&amp;#x7269;&amp;#x7EBF; &amp;#x692D;&amp;#x5706; &amp;#x5BF9;&amp;#x6570; &amp;#x4E09;&amp;#x89D2; &amp;#x4E0D;&amp;#x7EC6;&amp;#x5FC3; hight math https://www.latexlive.com/##
function-limitation-continuous &amp;#x6781;&amp;#x9650;&amp;#x7684;&amp;#x5B58;&amp;#x5728;&amp;#xFF1A;&amp;#x6839;&amp;#x636E;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x5F53;x&amp;#x2212;&amp;gt;x0x-&amp;gt;x_0x&amp;#x2212;&amp;gt;x0&amp;#x200B; &amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x2223;f(x)&amp;#x2212;A&amp;#x2223;&amp;lt;&amp;#x3B5;|f(x)-A|&amp;lt;\varepsilon&amp;#x2223;f(x)&amp;#x2212;A&amp;#x2223;&amp;lt;&amp;#x3B5;.
&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x8D8B;&amp;#x5411;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x6570;A&amp;#x3002;;&amp;#x4E14;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E0D;&amp;#x8981;&amp;#x628A;&amp;#x8FDE;&amp;#x7EED;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x6982;&amp;#x5FF5;&amp;#x6DF7;&amp;#x6DC6;&amp;#x4E86;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x5DE6;&amp;#x53F3;&amp;#x6781;&amp;#x9650;&amp;#x9700;&amp;#x76F8;&amp;#x7B49;&amp;#x5565;&amp;#x7684;&amp;#x3002; sequence limit
function limitation
x&amp;#x2212;&amp;gt;x0x-&amp;gt;x_0x&amp;#x2212;&amp;gt;x0&amp;#x200B;
x&amp;#x2212;&amp;gt;&amp;#x221E;x-&amp;gt;\inftyx&amp;#x2212;&amp;gt;&amp;#x221E;
QA:
&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48; &amp;#x2223;x&amp;#x2212;x0&amp;#x2223;&amp;gt;0|x-x_0|&amp;gt;0&amp;#x2223;x&amp;#x2212;x0&amp;#x200B;&amp;#x2223;&amp;gt;0 ,&amp;#x4E0D;&amp;#x80FD;&amp;#x7B49;&amp;#x4E8E; x==x0x==x_0x==x0&amp;#x200B;? &amp;#x5B9A;&amp;#x4E49;&amp;#x4E2D; &amp;#x2223;x&amp;#x2212;x0&amp;#x2223;&amp;gt;0|x-x_0|&amp;gt;0&amp;#x2223;x&amp;#x2212;x0&amp;#x200B;&amp;#x2223;&amp;gt;0 &amp;#x8868;&amp;#x793A; x!=x0x!=x_0x!=x0&amp;#x200B; ,&amp;#x6240;&amp;#x4EE5;&amp;#x5373;&amp;#x4F7F; x &amp;#x5728; x0x_0x0&amp;#x200B; &amp;#x6CA1;&amp;#x6709;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;f(x) &amp;#x5728; x0x_0x0&amp;#x200B; &amp;#x70B9;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6709;&amp;#x6781;&amp;#x9650;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x7814;&amp;#x7A76;&amp;#x6781;&amp;#x9650;&amp;#x662F;&amp;#x7814;&amp;#x7A76; x&amp;#x2212;&amp;gt;x0x-&amp;gt;x_0x&amp;#x2212;&amp;gt;x0&amp;#x200B; &amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D; f(x) &amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#x8D8B;&amp;#x52BF;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0E; f(x) &amp;#x5728; x0x_0x0&amp;#x200B; &amp;#x5904;&amp;#x6709;&amp;#x65E0;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CA1;&amp;#x6709;&amp;#x5173;&amp;#x7CFB;&amp;#x3002; &amp;#x3B4;\delta&amp;#x3B4; &amp;#x7684;&amp;#x53D6;&amp;#x503C;&amp;#x4E0E; &amp;#x3B5;\varepsilon&amp;#x3B5; &amp;#x6709;&amp;#x5173;&amp;#xFF0C;&amp;#x4E14; &amp;#x3B4;\delta&amp;#x3B4; &amp;#x4E0D;&amp;#x552F;&amp;#x4E00;&amp;#x3002;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#xFF0C;&amp;#x4EFB;&amp;#x610F;&amp;#x7ED9;&amp;#x4E00;&amp;#x4E2A; &amp;#x3B5;\varepsilon&amp;#x3B5; &amp;#x5C31;&amp;#x4F1A;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A; &amp;#x3B4;\delta&amp;#x3B4; &amp;#x4E0E;&amp;#x4E4B;&amp;#x5BF9;&amp;#x5E94;&amp;#xFF0C;&amp;#x6362;&amp;#x4E00;&amp;#x4E2A; &amp;#x3B5;\varepsilon&amp;#x3B5; &amp;#x5C31;&amp;#x6362;&amp;#x4E00;&amp;#x4E2A; &amp;#x3B4;\delta&amp;#x3B4; &amp;#xFF0C;&amp;#x8FD9;&amp;#x4E00;&amp;#x70B9;&amp;#x548C;&amp;#x6570;&amp;#x5217;&amp;#x6781;&amp;#x9650;&amp;#x4E2D;&amp;#x7684; N &amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002; &amp;#x4E09;&amp;#x6761;&amp;#x6027;&amp;#x8D28;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x63A8;&amp;#x4E8C;&amp;#xFF0C;&amp;#x4E8C;&amp;#x63A8;&amp;#x4E09;, &amp;#x63A8;&amp;#x65AD;&amp;#x51FA;&amp;#x6765;&amp;#x7684;.</description></item><item><title/><link>http://zput.github.io/post/postgraduate/line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/postgraduate/line/</guid><description>&lt;!DOCTYPE html> &amp;#x7EBF;&amp;#x6027;&amp;#x4EE3;&amp;#x6570; &amp;#x7EBF;&amp;#x6027;&amp;#x4EE3;&amp;#x6570; &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x7EBF;&amp;#x6027;&amp;#x4EE3;&amp;#x6570; &amp;#x7B2C;&amp;#x4E09;&amp;#x89C6;&amp;#x89D2;:&amp;#x4ECE;&amp;#x5411;&amp;#x91CF;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6; &amp;#x7B2C;&amp;#x4E00;&amp;#x89C6;&amp;#x89D2;:&amp;#x65B9;&amp;#x7A0B;&amp;#x7EC4;&amp;#x89D2;&amp;#x5EA6;{\color{Red} &amp;#x65B9;&amp;#x7A0B;&amp;#x7EC4;&amp;#x89D2;&amp;#x5EA6;}&amp;#x65B9;&amp;#x7A0B;&amp;#x7EC4;&amp;#x89D2;&amp;#x5EA6; &amp;#x7EBF;&amp;#x6027;&amp;#x65B9;&amp;#x7A0B;&amp;#x7EC4; define &amp;#x5177;&amp;#x4F53;&amp;#x5F62; &amp;#x62BD;&amp;#x8C61;&amp;#x5F62; nature application &amp;#x6709;&amp;#x6CA1;&amp;#x6709;&amp;#x89E3;? &amp;#x77E9;&amp;#x9635;&amp;#x7684;&amp;#x8FD0;&amp;#x7B97; define: nature: application: &amp;#x600E;&amp;#x4E48;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x89E3;--&amp;gt;&amp;#x6BD4;&amp;#x8F83;&amp;#x79E9; &amp;#x6C42;&amp;#x77E9;&amp;#x9635;&amp;#x79E9;{\bold{ \color{Red}&amp;#x6C42;&amp;#x77E9;&amp;#x9635;&amp;#x79E9;}}&amp;#x6C42;&amp;#x77E9;&amp;#x9635;&amp;#x79E9; define nature application &amp;#x884C;&amp;#x5217;&amp;#x5F0F;(&amp;#x4F59;&amp;#x5B50;&amp;#x5F0F;&amp;#x548C;&amp;#x4EE3;&amp;#x6570;&amp;#x4F59;&amp;#x5B50;&amp;#x5F0F;) &amp;#x7B2C;&amp;#x4E8C;&amp;#x89C6;&amp;#x89D2;:&amp;#x4ECE;&amp;#x5411;&amp;#x91CF;&amp;#x89D2;&amp;#x5EA6;&amp;#x6765;&amp;#x770B; define nature application &amp;#x5177;&amp;#x4F53;&amp;#x5F62; &amp;#x5177;&amp;#x4F53;&amp;#x5F62; &amp;#x5411;&amp;#x91CF;&amp;#x7B49;&amp;#x4EF7; &amp;#x6709;&amp;#x89E3;&amp;#x600E;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#xFF1F; &amp;#x7279;&amp;#x5F81;&amp;#x503C;-&amp;#x7279;&amp;#x5F81;&amp;#x5411;&amp;#x91CF; define nature application &amp;#x76F8;&amp;#x4F3C;&amp;#x5408;&amp;#x540C; &amp;#x76F8;&amp;#x4F3C;&amp;#x7406;&amp;#x8BBA; define nature A&amp;#x223C;&amp;#x39B;A \sim \LambdaA&amp;#x223C;&amp;#x39B; A&amp;#x223C;BA \sim BA&amp;#x223C;B &amp;#x5B9E;&amp;#x5BF9;&amp;#x79F0;&amp;#x77E9;&amp;#x9635;/&amp;#x6B63;&amp;#x4EA4;&amp;#x77E9;&amp;#x9635;(&amp;#x56DB;/&amp;#x4E8C;&amp;#x6027;&amp;#x8D28;) application &amp;#x4E8C;&amp;#x6B21;&amp;#x578B;&amp;#x4E0E;&amp;#x5408;&amp;#x540C; define nature application &amp;#x5FEB;&amp;#x901F;&amp;#x56DE;&amp;#x987E; &amp;#x80CC;&amp;#x8BF5; TODO &amp;#x7406;&amp;#x89E3; archive
- &amp;#x6781;&amp;#x5927;&amp;#x7EBF;&amp;#x6027;&amp;#x65E0;&amp;#x5173;&amp;#x7EC4; &amp;#x7B2C;&amp;#x4E09;&amp;#x89C6;&amp;#x89D2;:&amp;#x4ECE;&amp;#x5411;&amp;#x91CF;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6; jenif&amp;#x7684;&amp;#x57FA;&amp;#x5411;&amp;#x91CF;&amp;lt;b1,b2&amp;gt;:
[10][01]\begin{bmatrix} 1 \\ 0 \end{bmatrix} \begin{bmatrix} 0 \\ 1 \end{bmatrix}[10&amp;#x200B;][01&amp;#x200B;]</description></item><item><title/><link>http://zput.github.io/post/postgraduate/math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/postgraduate/math/</guid><description>&lt;!DOCTYPE html> &amp;#x9AD8;&amp;#x7B49;&amp;#x6570;&amp;#x5B66; &amp;#x25B6;&amp;#xFE0E;allrunning... &amp;#x9AD8;&amp;#x7B49;&amp;#x6570;&amp;#x5B66; &amp;#x51FD;&amp;#x6570;-&amp;#x6781;&amp;#x9650;-&amp;#x8FDE;&amp;#x7EED;(function-limitation-continuous) &amp;#x51FD;&amp;#x6570; define:&amp;#x81EA;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F; nature: application: &amp;#x6781;&amp;#x9650;: define&amp;#xFF1A; nature: application: &amp;#x8FDE;&amp;#x7EED;: define: &amp;#x5DE6; == &amp;#x53F3; == f(x0)f(x_0)f(x0&amp;#x200B;) nature: application: &amp;#x5BFC;&amp;#x6570;&amp;#x4E0E;&amp;#x5FAE;&amp;#x5206;&amp;#xFF08;&amp;#x4E00;&amp;#x5143;&amp;#x5FAE;&amp;#x5206;&amp;#xFF09; define: nature: application: &amp;#x5E38;&amp;#x5FAE;&amp;#x5206;&amp;#x65B9;&amp;#x7A0B; define nature: application: &amp;#x5168;&amp;#x5FAE;&amp;#x5206; define nature application &amp;#x4E00;&amp;#x5143;&amp;#x79EF;&amp;#x5206; define: &amp;#x5B9A;&amp;#x79EF;&amp;#x5206;&amp;#x4E0E;&amp;#x79EF;&amp;#x5206;&amp;#x53D8;&amp;#x91CF;&amp;#x65E0;&amp;#x5173;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x5B83;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x7B49;&amp;#x4E8E; &amp;#x222B;abf(t)dt\int_{a}^{b}f(t)dt&amp;#x222B;ab&amp;#x200B;f(t)dt&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x4EFB;&amp;#x610F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B9E;&amp;#x6570;x&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x4E0A;&amp;#x9650;&amp;#x51FD;&amp;#x6570; F(x)=&amp;#x222B;axf(t)dtF(x)=\int_{a}^{x} f(t)dtF(x)=&amp;#x222B;ax&amp;#x200B;f(t)dt nature application &amp;#x4E8C;&amp;#x91CD;&amp;#x79EF;&amp;#x5206; define: nature: application: &amp;#x5FEB;&amp;#x901F;&amp;#x56DE;&amp;#x987E; &amp;#x9009;&amp;#x586B;&amp;#x6280;&amp;#x5DE7; &amp;#x6982;&amp;#x5FF5;-&amp;#x7406;&amp;#x8BBA;&amp;#x7684;&amp;#x9898; &amp;#x7F3A;&amp;#x4E4F;&amp;#x65B9;&amp;#x6CD5;/&amp;#x6280;&amp;#x5DE7; &amp;#x76F4;&amp;#x63A5;&amp;#x6CD5; &amp;#x95F4;&amp;#x63A5;&amp;#x6CD5; TODO &amp;#x8BB0;&amp;#x5FC6; &amp;#x9ED8;&amp;#x5199; &amp;#x9644;&amp;#x5F55; archive &amp;#x9AD8;&amp;#x7B49;&amp;#x6570;&amp;#x5B66; &amp;#x51FD;&amp;#x6570;-&amp;#x6781;&amp;#x9650;-&amp;#x8FDE;&amp;#x7EED;(function-limitation-continuous) &amp;#x51FD;&amp;#x6570; &amp;#x79EF;&amp;#x5206;&amp;#x4E2D;&amp;#x503C;&amp;#x5B9A;&amp;#x7406;: &amp;#x222B;abf(x)dx=f(&amp;#x3B5;)(b&amp;#x2212;a),a&amp;lt;&amp;#x3B5;&amp;lt;b\int_{a}^{b} f(x)dx = f(\varepsilon)(b-a), a&amp;lt;\varepsilon &amp;lt; b&amp;#x222B;ab&amp;#x200B;f(x)dx=f(&amp;#x3B5;)(b&amp;#x2212;a),a&amp;lt;&amp;#x3B5;&amp;lt;b
&amp;#x62C9;&amp;#x683C;&amp;#x6717;&amp;#x65E5;&amp;#x4E2D;&amp;#x503C;&amp;#x5B9A;&amp;#x7406;: f(b)&amp;#x2212;f(a)=f&amp;#x2032;(&amp;#x3B5;)(b&amp;#x2212;a),a&amp;lt;&amp;#x3B5;&amp;lt;bf(b)-f(a) = f&amp;apos;(\varepsilon)(b-a), a&amp;lt;\varepsilon &amp;lt; bf(b)&amp;#x2212;f(a)=f&amp;#x2032;(&amp;#x3B5;)(b&amp;#x2212;a),a&amp;lt;&amp;#x3B5;&amp;lt;b</description></item><item><title>mongo总结</title><link>http://zput.github.io/post/mrmk/mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/mrmk/mongo/</guid><description>Mongo 概述mongo what: MongoDB中的一条记录是一个document一个对象，它是一个由字段和值对（field:value）组成的数据结构。 M</description></item><item><title>redis总结</title><link>http://zput.github.io/post/mrmk/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://zput.github.io/post/mrmk/redis/</guid><description>Redis redis中有一个「核心的对象」叫做redisObject 是用来表示所有的key和value的，用redisObject结构体来表示Str</description></item></channel></rss>